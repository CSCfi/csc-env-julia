local name = myModuleName()
local version = myModuleVersion()

help([[The Julia programming language]])
whatis("Name : " .. name)
whatis("Version : " .. version)
whatis("Description : The Julia programming language")
whatis("URL : http://julialang.org")

local appl_dir = "{{ appl_dir }}"
local julia_release_dir = pathJoin(appl_dir, "julia", version)

-- Path to Julia binaries, manual and libraries (if necessary).
prepend_path("PATH", pathJoin(julia_release_dir, "bin"))
prepend_path("MANPATH", pathJoin(julia_release_dir, "share/man"))
--prepend_path("LD_LIBRARY_PATH", pathJoin(julia_release_dir, "lib"))

-- We define the depot path explicitly so we can extend if necessary.
-- First depot directory is the user specific location.
-- Second depot directory is directory that contains the base and stdlib.
append_path("JULIA_DEPOT_PATH", pathJoin(os.getenv("HOME"), ".julia"))
append_path("JULIA_DEPOT_PATH", pathJoin(julia_release_dir, "share/julia"))

-- We define the load path explicitly so we can extend if necessary.
-- The default load path.
append_path("JULIA_LOAD_PATH", "@")
append_path("JULIA_LOAD_PATH", "@v#.#")
append_path("JULIA_LOAD_PATH", "@stdlib")

-- We set the number of threads based on Slurm reservation defaulting to one,
-- unless the user has defined the environment variable.
local default_num_threads = os.getenv("SLURM_CPUS_PER_TASK") or "1"
pushenv("JULIA_CPU_THREADS", os.getenv("JULIA_CPU_THREADS") or default_num_threads)
pushenv("JULIA_NUM_THREADS", os.getenv("JULIA_NUM_THREADS") or default_num_threads)
pushenv("OPENBLAS_NUM_THREADS", os.getenv("OPENBLAS_NUM_THREADS") or default_num_threads)
pushenv("MKL_NUM_THREADS", os.getenv("MKL_NUM_THREADS") or default_num_threads)
