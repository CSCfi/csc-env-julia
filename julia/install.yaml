- name: "Install julia environment"
  hosts:
    - "group_localhost"
    - "group_puhti"
    - "group_mahti"
    - "group_lumi"
  become: false

  tasks:
    - name: "Include variables"
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/version/{{ version }}.yaml"

    - name: "Create a julia application directory"
      ansible.builtin.file:
        path: "{{ appl_dir }}/julia"
        state: "directory"
        mode: "ug=rwx,o=rx,g+s"
        group: "{{ group }}"

    - name: "Download the julia binaries"
      ansible.builtin.get_url:
        url: "{{ julia_url }}"
        dest: "{{ appl_dir }}/julia/{{ version }}.tar.gz"
        checksum: "{{ julia_checksum }}"
        mode: "ug=rw,o=r"
        group: "{{ group }}"

    - name: "Extract the julia binaries"
      ansible.builtin.unarchive:
        src: "{{ appl_dir }}/julia/{{ version }}.tar.gz"
        dest: "{{ appl_dir }}/julia"
        remote_src: true
        mode: "ug=rwX,o=rX"
        group: "{{ group }}"
        creates: "{{ appl_dir }}/julia/{{ version }}"
        extra_opts:
          - "--transform"
          - "s/{{ julia_prefix }}/{{ version }}/"

    - name: "Create a directory for julia modulefiles"
      ansible.builtin.file:
        path: "{{ modulefiles_dir }}/julia"
        state: "directory"
        mode: "ug=rwx,o=rx,g+s"
        group: "{{ group }}"

    - name: "Create a julia module"
      ansible.builtin.template:
        src: "{{ playbook_dir }}/modulefiles/julia.lua.j2"
        dest: "{{ modulefiles_dir }}/julia/{{ version }}.lua"
        mode: "ug=rw,o=r"
        group: "{{ group }}"

- name: "Synchronize across LUMI Lustres"
  hosts:
    - "group_lumi"
  become: false

  tasks:
    - name: "Synchronize binaries"
      ansible.builtin.command: |
        rsync --archive --delete "{{ item.src }}" "{{ item.dest }}"
      args:
        creates: "{{ item.dest }}/{{ version }}"
      loop:
        - src: "/pfs/lustrep1/{{ appl_dir }}/julia/{{ version }}"
          dest: "/pfs/lustrep2/{{ appl_dir }}/julia"
        - src: "/pfs/lustrep1/{{ appl_dir }}/julia/{{ version }}"
          dest: "/pfs/lustrep3/{{ appl_dir }}/julia"
        - src: "/pfs/lustrep1/{{ appl_dir }}/julia/{{ version }}"
          dest: "/pfs/lustrep4/{{ appl_dir }}/julia"

    - name: "Synchronize modulefiles"
      ansible.builtin.command: |
        rsync --archive --delete "{{ item.src }}" "{{ item.dest }}"
      loop:
        - src: "/pfs/lustrep1/{{ modulefiles_dir }}/julia"
          dest: "/pfs/lustrep2/{{ modulefiles_dir }}"
        - src: "/pfs/lustrep1/{{ modulefiles_dir }}/julia"
          dest: "/pfs/lustrep3/{{ modulefiles_dir }}"
        - src: "/pfs/lustrep1/{{ modulefiles_dir }}/julia"
          dest: "/pfs/lustrep4/{{ modulefiles_dir }}"
