- name: "Install julia-jupyter environment"
  become: false

  tasks:
    - name: "Create julia-jupyter application directory"
      ansible.builtin.file:
        path: "{{ appl_dir }}/julia-jupyter"
        state: "directory"

    - name: "Copy requirements for the virtual environment"
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/jupyter/requirements-freeze.txt"
        dest: "{{ appl_dir }}/julia-jupyter/requirements.txt"

    - name: "Create Python virtual environment"
      ansible.builtin.command: |
          python3.9 -m venv "env"
      args:
        chdir: "{{ appl_dir }}/julia-jupyter"
        creates: "{{ appl_dir }}/julia-jupyter/env"

    - name: "Install packages to the virtual environment"
      ansible.builtin.command: |
        ./env/bin/pip install requirements.txt
      args:
        chdir: "{{ appl_dir }}/julia-jupyter"
        creates: "{{ appl_dir }}/julia-jupyter/env/bin/jupyter"

    - name: "Freeze pip requirements"
      ansible.builtin.command: |
        ./env/bin/pip freeze -r requirements.txt > requirements-freeze.txt
      args:
        chdir: "{{ appl_dir }}/julia-jupyter"
        creates: "{{ appl_dir }}/julia-jupyter/requirements-freeze.txt"

    - name: "Remove the default kernel"
      ansible.builtin.command: |
        ./env/bin/jupyter kernelspec remove -y python3
      args:
        chdir: "{{ appl_dir }}/julia-jupyter"
        removes: "{{ appl_dir }}/julia-jupyter/env/kernels/python3"

    - name: "Create julia-jupyter modulefile"
      ansible.builtin.template:
        src: "{{ playbook_dir }}/modulefiles/julia-jupyter.lua.j2"
        dest: "{{ modulefiles_dir }}/julia-jupyter/env.lua"
